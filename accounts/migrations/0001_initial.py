# Generated by Django 2.1.3 on 2018-12-13 16:27

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('ldap_name', models.CharField(blank=True, max_length=64)),
                ('entry_date', models.DateField(blank=True, null=True, verbose_name='入职时间')),
                ('official_date', models.DateField(blank=True, null=True, verbose_name='转正时间')),
                ('resign_date', models.DateField(blank=True, null=True, verbose_name='离职时间')),
                ('skill_level', models.SmallIntegerField(choices=[(0, '初级'), (1, '中级'), (2, '高级')], default=0, verbose_name='技能等级')),
                ('air_levels', models.SmallIntegerField(choices=[(0, '直飞'), (1, '转机')], default=0, verbose_name='机票报销类别')),
                ('residence_levels', models.SmallIntegerField(choices=[(0, '一级'), (1, '二级'), (1, '三级')], default=0, verbose_name='住宿报销类别')),
                ('rfid', models.CharField(blank=True, max_length=64, null=True, verbose_name='大楼ID')),
                ('rfid_name', models.CharField(blank=True, max_length=64, null=True, verbose_name='大楼ID名称')),
                ('work_phone', models.BigIntegerField(blank=True, null=True, verbose_name='工作号码')),
                ('visa_status', models.SmallIntegerField(choices=[(0, '未申请'), (1, '已申请'), (2, '办理中'), (3, '已完成')], default=0, verbose_name='工签状态')),
                ('visa_issue_date', models.DateField(blank=True, null=True, verbose_name='工签申请时间')),
                ('visa_expir_date', models.DateField(blank=True, null=True, verbose_name='工签过期时间')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Structure',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60, verbose_name='名称')),
                ('type', models.CharField(choices=[('unit', '单位'), ('department', '部门')], default='department', max_length=20, verbose_name='类型')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.Structure', verbose_name='父类架构')),
            ],
            options={
                'verbose_name': '组织架构',
                'verbose_name_plural': '组织架构',
            },
        ),
        migrations.AddField(
            model_name='customuser',
            name='department',
            field=models.ForeignKey(blank=True, null=True, on_delete=False, related_name='department_tree', to='accounts.Structure', verbose_name='组织部门'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='position',
            field=models.ForeignKey(blank=True, null=True, on_delete=False, related_name='position_tree', to='accounts.Structure', verbose_name='职务'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
